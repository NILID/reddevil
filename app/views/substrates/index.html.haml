- if params[:action] == 'mirrors'
  - page_title = t('mirrors.title')
- else
  - page_title = t('substrates.title')

- set_meta_tags title: page_title

- model_class = Substrate
.well
  .pull-right
    - if params[:action] == 'mirrors'
      - User.with_role(:mirrors).each do |u|
        = link_to user_profile_path(u), data: { toggle: 'tooltip' }, title: u.profile.surname do
          = image_tag u.profile.avatar(:thumb), width: '30px', class: 'rounded-circle img-circle-bordered'

    - else
      - User.with_role(:drawing).each do |u|
        = link_to user_profile_path(u), data: { toggle: 'tooltip' }, title: u.profile.surname do
          = image_tag u.profile.avatar(:thumb), width: '30px', class: 'rounded-circle img-circle-bordered'
  .clearfix
  .page-header

    %h2
      = page_title
      %small
        - if can? :new, Substrate
          = link_to new_substrate_path(category: (params[:action] == 'mirrors' ? 'mirror' : 'substrate' )), class: 'btn btn-primary btn-sm', style: 'vertical-align:middle' do
            = fa_icon 'plus', text: t('shared.add')
        %span.btn-group.pull-right
          = link_to (params[:action] == 'mirrors' ? mirrors_substrates_path(format: 'pdf') : substrates_path(format: 'pdf')), class: 'btn btn-secondary btn-sm', target: '_blank' do
            = fa_icon 'file-pdf-o', text: 'PDF'
          = link_to (params[:action] == 'mirrors' ? mirrors_substrates_path(format: 'xls') : substrates_path(format: 'xls')), class: 'btn btn-secondary btn-sm' do
            = fa_icon 'file-excel-o', text: 'Excel'
  %table.table.table-bordered.table-substrates.table-hover
    %thead
      %tr
        %th â„–
        %th= sort_link @q, :title, model_class.human_attribute_name(:title)
        %th= sort_link @q, :drawing, model_class.human_attribute_name(:drawing)
        %th= sort_link @q, :number, model_class.human_attribute_name(:number)
        %th= sort_link @q, :state, model_class.human_attribute_name(:state)
        %th= sort_link @q, :theme, model_class.human_attribute_name(:theme)
        - if params[:action] == 'mirrors'
          %th= sort_link @q, :child_id, t('substrates.one_title')
        %th.big-tr= model_class.human_attribute_name(:desc)
        %th.large-tr= sort_link @q, :user_id, model_class.human_attribute_name(:user_id)
    %tbody#substrates{ data: { update_url: sort_substrates_url } }
      = render @substrates
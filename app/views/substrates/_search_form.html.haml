.card-body.bg-info.text-white#search-form-collapse{class: params[:q] ? '' : 'collapse' }
  = search_form_for @q do |f|
    .row
      .col
        .form-group.row.mb-1
          = f.label :title_or_desc_or_drawing_or_detail_or_propotions_or_contract_or_arrival_from_or_shipping_to_or_shipping_base_cont,
            t('shared.search'),
            class: 'col-sm-4 col-form-label'
          .col
            = f.text_field :title_or_desc_or_drawing_or_detail_or_propotions_or_contract_or_arrival_from_or_shipping_to_or_shipping_base_cont,
              placeholder: t('shared.search_text'),
              class: 'form-control form-control-sm'
        .form-group.row.mb-1
          = f.label :statuses_mask_eq,
            Substrate.human_attribute_name(:statuses_mask),
            class: 'col-sm-4 col-form-label'
          .col
            = f.select :statuses_mask_eq, {}, { include_blank: '== Выберите статус ==' }, { class: 'selectpicker form-control form-control-sm' } do
              - Substrate::STATUSES.each do |s|
                = content_tag(:option, s, value: status_index(s), data: { content: status_text(s) }, selected: params[:q] && (params[:q][:statuses_mask_eq] == status_index(s).to_s) )
        .form-group.row.mb-1
          = f.label :priority_eq,
            Substrate.human_attribute_name(:priority),
            class: 'col-sm-4 col-form-label'
          .col
            = f.select :priority_eq, {}, { include_blank: '== Выберите приоритет ==' }, { class: 'selectpicker form-control form-control-sm' } do
              - Substrate::PRIORITIES.each do |s|
                = content_tag(:option, t("substrates.priorities.#{s}"), value: s, data: { content: priority_select_tag(s) }, selected: params[:q] && (params[:q][:priority_eq] == s) )
        .form-group.row.mb-1
          = f.label :user_id_eq,
            Substrate.human_attribute_name(:user),
            class: 'col-sm-4 col-form-label'
          .col
            = f.select :user_id_eq, {}, { include_blank: '== Выберите автора ==' }, { class: 'selectpicker form-control form-control-sm' } do
              - User.with_group(:lab182).each do |u|
                = content_tag(:option, u.surname_name, value: u.id, selected: params[:q] && (params[:q][:user_id_eq] == u.id.to_s) )
        .form-group.row.mb-1
          = f.label :amount_gteq,
            Substrate.human_attribute_name(:amount_short),
            class: 'col-sm-4 col-form-label'
          .col
            .row
              .col.pr-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text от
                  = f.text_field :amount_gteq, class: 'form-control'
              .col.pl-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text до
                  = f.text_field :amount_lteq, class: 'form-control'

      .col
        .form-group.row.mb-1
          = f.label :wave_gteq,
            Substrate.human_attribute_name(:wave),
            class: 'col-sm-4 col-form-label'
          .col
            .row.pr-0
              .col.pr-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text от
                  = f.text_field :wave_gteq, class: 'form-control'
              .col.pl-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text до
                  = f.text_field :wave_lteq, class: 'form-control'
        .form-group.row.mb-1
          = f.label :corner_gteq,
            Substrate.human_attribute_name(:corner),
            class: 'col-sm-4 col-form-label'
          .col
            .row
              .col.pr-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text от
                  = f.text_field :corner_gteq, class: 'form-control'
              .col.pl-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text до
                  = f.text_field :corner_lteq, class: 'form-control'
        .form-group.row.mb-1
          = f.label :frame_eq,
            t('substrates.frame'),
            class: 'col-sm-4 col-form-label'
          .col
            = f.select :frame_eq, {}, { include_blank: '== Наличие оправы ==' }, { class: 'selectpicker form-control form-control-sm' } do
              - [true, false].each do |u|
                = content_tag(:option, t("substrates.frame_#{u}"), value: u, selected: params[:q] && (params[:q][:frame_eq] == u.to_s) )

        .form-group.row.mb-1
          = f.label :sides_eq,
            Substrate.human_attribute_name(:sides),
            class: 'col-sm-4 col-form-label'
          .col
            = f.select :sides_eq, {}, { include_blank: '== Выберите сторону ==' }, { class: 'selectpicker form-control form-control-sm' } do
              - Substrate::SIDES.each do |s|
                = content_tag(:option, t("substrates.sides.#{s}"), value: s, selected: params[:q] && (params[:q][:sides_eq] == s.to_s) )
        .form-group.row.mb-1
          = f.label :coating_type_eq,
            Substrate.human_attribute_name(:coating_type),
            class: 'col-sm-4 col-form-label'
          .col
            = f.select :coating_type_eq, Substrate::COATINGS.map { |c| c }, { include_blank: '== Выберите тип ==' }, { class: 'selectpicker form-control form-control-sm' }

        .form-group.row.mb-1
          = f.label :coating_type_b_eq,
            Substrate.human_attribute_name(:coating_type_b),
            class: 'col-sm-4 col-form-label'
          .col
            = f.select :coating_type_b_eq, Substrate::COATINGS.map { |c| c }, { include_blank: '== Выберите тип ==' }, { class: 'selectpicker form-control form-control-sm' }

      .col
        .form-group.row.mb-1
          = f.label :created_at_gteq,
            t('substrates.created_at'),
            class: 'col-sm-4 col-form-label'
          .col
            .row
              .col.pr-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text c
                  = f.text_field :created_at_gteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:created_at_gteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:created_at_gteq].present?)
              .col.pl-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text до
                  = f.text_field :created_at_lteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:created_at_lteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:created_at_lteq].present?)
        .form-group.row.mb-1
          = f.label :arrival_at_gteq,
            t('substrates.arrival.title'),
            class: 'col-sm-4 col-form-label'
          .col
            .row
              .col.pr-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text c
                  = f.text_field :arrival_at_gteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:arrival_at_gteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:arrival_at_gteq].present?)
              .col.pl-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text до
                  = f.text_field :arrival_at_lteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:arrival_at_lteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:arrival_at_lteq].present?)

        .form-group.row.mb-1
          = f.label :future_shipping_at_gteq,
            t('substrates.future_shipping_short'),
            class: 'col-sm-4 col-form-label'
          .col
            .row
              .col.pr-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text c
                  = f.text_field :future_shipping_at_gteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:future_shipping_at_gteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:future_shipping_at_gteq].present?)
              .col.pl-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text до
                  = f.text_field :future_shipping_at_lteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:future_shipping_at_lteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:future_shipping_at_lteq].present?)


        .form-group.row.mb-1
          = f.label :shipping_at_gteq,
            t('substrates.shipping.title'),
            class: 'col-sm-4 col-form-label'
          .col
            .row
              .col.pr-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text c
                  = f.text_field :shipping_at_gteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:shipping_at_gteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:shipping_at_gteq].present?)
              .col.pl-0
                .input-group.input-group-sm
                  .input-group-prepend
                    .input-group-text до
                  = f.text_field :shipping_at_lteq,
                    class: 'datepicker form-control',
                    value: (params[:q][:shipping_at_lteq].to_datetime.strftime('%d.%m.%Y') if params[:q] && params[:q][:shipping_at_lteq].present?)
        .form-group.row.text-right.mt-5
          .col
            = f.button class: 'btn btn-warning btn-sm btn-block' do
              = fa_icon 'search', text: t('shared.to_search')

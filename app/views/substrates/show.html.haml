- set_meta_tags title: @substrate.title

.card
  .card-body
    .row
      .col-12
        = render 'breadcrumb', titles: [@substrate.title]
      .col-12.mb-2
        = link_to edit_substrate_path(@substrate), class: 'btn btn-outline-primary btn-sm mr-1' do
          = fa_icon 'edit', text: t('shared.edit')
        = link_to changes_substrate_path(@substrate), class: 'btn btn-outline-primary btn-sm' do
          = fa_icon 'history', text: t('shared.history')
    .row
      .col
        %dl.row
          %dt.col-sm-3= Substrate.human_attribute_name(:priorityx)
          %dd.col-sm-9= new_priority_tag @substrate.priorityx
          %dt.col-sm-3= Substrate.human_attribute_name(:status)
          %dd.col-sm-9= status_text(@substrate.status)
          %dt.col-sm-3= t('substrates.created_at')
          %dd.col-sm-9= l @substrate.created_at, format: :long
          %dt.col-sm-3= Substrate.human_attribute_name(:desc)
          %dd.col-sm-9= @substrate.desc
      .col
        .row
          .col
            .h5.text-muted
              = t 'substrates.followers'
          .col.text-right
            = link_to '#manage_followers', class: 'btn btn-sm btn-outline-secondary', data: { toggle: 'modal', target: '#manage_followers' } do
              = fa_icon 'users', text: t('substrates.followers_manage')
        .row
          .col
            %hr
            #followers_small
              = render partial: 'follow_user_small',
                collection: @followers,
                as: :user,
                locals: { substrate: @substrate }
        - if @substrate.finished_at?
          .row.mt-3
            .col
              %b= Substrate.human_attribute_name(:finished_at)
              = short_date @substrate.finished_at

.card.mt-3
  .card-header
    .h4.text-muted
      = t('shared.information')
  .card-body
    .row
      .col
        %table.table.table-striped.table-sm
          %tr
            %th(scope="row")= Substrate.human_attribute_name(:drawing)
            %td= @substrate.drawing
          %tr
            %th(scope="row")= Substrate.human_attribute_name(:detail)
            %td= @substrate.detail
          %tr
            %th(scope="row")= Substrate.human_attribute_name(:amount)
            %td
              .mb-2
                %span.text-muted= t('substrates.instock_search')
                %strong= @substrate.instock
              %span.text-muted= t('substrates.amount_search')
              %strong= @substrate.amount
          %tr
            %th(scope="row")= Substrate.human_attribute_name(:ready_count)
            %td= @substrate.ready_count
          %tr
            %th(scope="row")= t('substrates.size')
            %td
              - if @substrate.shape?
                .text-muted.mb-2
                  = fa_icon @substrate.shape&.dasherize,
                    text: t("substrates.shapes.#{@substrate.shape}")
              .mb-2
                %strong
                  - if @substrate.diameter?
                    &empty; #{@substrate.diameter}
                  - if @substrate.width? || @substrate.height?
                    = fa_icon :ruler_combined, text: "#{@substrate.width} x #{@substrate.height}"
              - if @substrate.thickness?
                .d-block
                  %span.text-muted= Substrate.human_attribute_name(:thickness)
                  = @substrate.thickness
          %tr
            %th(scope="row")= Substrate.human_attribute_name(:frame)
            %td= t("substrates.frame_#{@substrate.frame}")
          %tr
            %th(scope="row")= Substrate.human_attribute_name(:rad_strength)
            %td= rad_icon(@substrate.rad_strength, nil, true)

        %p
          %table.table
            %thead
              %tr
                %th= Substrate.human_attribute_name(:sides)
                %th= t('substrates.coating_type')
                %th= t('substrates.corner')
                %th
                  = t('substrates.wave')
                  %span{title: t('shared.old'), data: { toggle: 'tooltip' } }
                    = fa_icon :question_circle, class: 'text-info'
                %th= t('substrates.spectr_chars_full')
            %tbody
              %tr
                %td
                  %strong А
                %td= @substrate.coating_type
                %td= @substrate.corner
                %td= @substrate.wave
                %td
                  - @substrate_features_a.each do |feature|
                    %p= substrate_feature(feature)

              %tr
                %td
                  %strong Б
                %td= @substrate.coating_type_b
                %td= @substrate.corner_b
                %td= @substrate.wave_b
                %td
                  - @substrate_features_b.each do |feature|
                    %p= substrate_feature(feature)

      .col
        %dl.row
          %dt.col-sm-4= Substrate.human_attribute_name(:contract)
          %dd.col-sm-8= @substrate.contract
          %dt.col-sm-4= Substrate.human_attribute_name(:arrival_at)
          %dd.col-sm-8= short_date @substrate.arrival_at if @substrate.arrival_at
          %dt.col-sm-4= Substrate.human_attribute_name(:arrival_from)
          %dd.col-sm-8= @substrate.arrival_from
          %dt.col-sm-4= Substrate.human_attribute_name(:future_shipping_at)
          %dd.col-sm-8= short_date @substrate.future_shipping_at if @substrate.future_shipping_at
          %dt.col-sm-4= Substrate.human_attribute_name(:shipping_at)
          %dd.col-sm-8= short_date @substrate.shipping_at if @substrate.shipping_at
          %dt.col-sm-4= Substrate.human_attribute_name(:shipping_to)
          %dd.col-sm-8= @substrate.shipping_to
          %dt.col-sm-4= Substrate.human_attribute_name(:shipping_base)
          %dd.col-sm-8= @substrate.shipping_base
          %dt.col-sm-4= Substrate.human_attribute_name(:user)
          %dd.col-sm-8= link_to @substrate.author, @substrate.user

.card.mt-3
  .card-header
    .h4.text-muted
      = t 'subfiles.title'
      %small
        .float-right.btn.btn-sm.btn-primary(data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample")
          = fa_icon 'file', text: t('subfiles.add'), class: 'mr-2'
  .card-body
    .row.collapse#collapseExample
      .col
        .my-3= render partial: 'subfiles/form', locals: { substrate: @substrate, subfile: Subfile.new }

    %table.table.table-hover.table-sm
      = content_tag_for(:tr, @subfiles) do |subfile|
        %td
          = link_to subfile.src_file_name, subfile.src.url, target: '_blank'
        %td
          = link_to subfile.user.surname_name, subfile.user
        %td
          = link_to [@substrate, subfile], method: :delete, remote: true, class: 'btn btn-sm btn-danger float-right', data: { confirm: t('shared.sure') } do
            = fa_icon 'trash'

.card.mt-3
  .card-header
    .h4.text-muted
      = t 'substrates.manage_otk'
      %small
        = otk_status_text(@substrate.otk_status, false)
        - if can? :manage_otk, Substrate
          = link_to manage_otk_substrate_path(@substrate), class: 'btn btn-primary btn-sm float-right' do
            = t('shared.edit')
  - if @substrate.otk_desc?
    .card-body
      %p
        = @substrate.otk_desc
      - if @substrate.otk_documents.attached?
        %h4
          = OfficeNote.human_attribute_name(:documents)
        %table.table.table-hover.table-sm
          - @substrate.otk_documents.each.with_index(1) do |document, index|
            %tr
              %td
                = [index, '.'].join()
              %td
                = link_to document.filename, document, target: '_blank'
              - if can? :delete_document, Substrate
                %td
                  = link_to delete_document_substrate_path(@substrate, document_id: document.signed_id), class: 'btn btn-sm btn-danger float-right', method: :delete, data: { confirm: t('shared.sure') } do
                    = fa_icon 'trash'

.modal.fade#manage_followers(role='dialog' tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true")
  .modal-dialog
    .modal-content
      .modal-header
        .lead= t 'substrates.followers_manage_full'
      .modal-body
        .row
          .col.border-right
            .h6.text-muted= t 'substrates.followers_future'
            %ul.list-group.list-group-flush#future_followers
              = render partial: 'follow_user',
                collection: @users,
                as: :user,
                locals: { substrate: @substrate, marker: :plus }
          .col
            .h6.text-muted= t 'substrates.followers'
            %ul.list-group.list-group-flush#followers
              = render partial: 'follow_user',
                collection: @followers,
                as: :user,
                locals: { substrate: @substrate, marker: :minus }

- model_class = Substrate
.page-header
  %h2
    =t 'substrates.title'
    %small
      = link_to new_substrate_path, class: 'btn btn-primary btn-small' do
        %i.icon.icon-plus
        &nbsp;
        = t('shared.add')
.well
  %table.table.table-bordered.table-striped.table-substrates.table-hover
    %thead
      %tr
        %th â„–
        %th= sort_link @q, :title, model_class.human_attribute_name(:title)
        %th= sort_link @q, :drawing, model_class.human_attribute_name(:drawing)
        %th= sort_link @q, :number, model_class.human_attribute_name(:number)
        %th= sort_link @q, :state, model_class.human_attribute_name(:state)
        %th.big-tr= model_class.human_attribute_name(:desc)
        %th= sort_link @q, :user_id, model_class.human_attribute_name(:user_id)
    %tbody
      - @substrates.each_with_index do |substrate, index|
        = content_tag_for(:tr, substrate, class: "substrate-title #{substrate.state_css}") do
          %td= index+1
          %td
            = link_to substrate.title, substrate
            %span.substrates-actions
              - if can? :manage, Substrate
                = link_to edit_substrate_path(substrate), class: 'btn-small btn' do
                  %span.icon.icon-pencil
          %td= substrate.drawing
          %td= substrate.number
          %td= best_in_place substrate, :state, as: :select, collection: Substrate::STATES.collect {|state| [ state, t("substrates.states.#{state}")]}, inner_class: 'input-medium', data: {place_success: substrate.id}
          %td= substrate.desc
          %td.substrate_user= link_to substrate.user.profile.surname, user_profile_path(substrate.user) if substrate.user

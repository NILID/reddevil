%tr
  %td.team-commands
    .team
      .team-name
        = image_tag match.team1.flag(:thumb)
        %span{style: (match.team1 == match.check_win) ? 'font-weight:bold' : nil} #{match.team1.title}
      .team-goal
        #{match.team1goal || '-'}
    %br/
    .team
      .team-name
        = image_tag match.team2.flag(:thumb)
        %span{style: (match.team2 == match.check_win) ? 'font-weight:bold' : nil} #{match.team2.title}
      .team-goal
        #{match.team2goal || '-'}


  %td.match-ending(style="width:4px;")
    - if match.ending != 'basic'
      - if match.team1 != match.winner
        %br/
      %span.tip
        - if match.ending == 'penalty'
          = t("matches.#{(@round.type_id == 2) ? 'bullit' : match.ending}_short")
          .tip-text= t("matches.#{(@round.type_id == 2) ? 'bullit' : match.ending}")
        - elsif match.ending == 'overtime'
          = t("matches.overtime_short#{(@round.type_id == 2) ? '_hockey' : nil}")
          .tip-text= t("matches.overtime#{(@round.type_id == 2) ? '_hockey' : nil}")

  - @users.each do |user|
    - f = user.forecasts.where(match_id: match.id).first
    - if f
      - f_css = (f.team1goal == match.team1goal) && (match.team2goal == f.team2goal) && (match.ending == f.ending) && ((%w[overtime basic].include? match.ending) || (match.ending == 'penalty' && match.winner == f.winner)) ? 'success' : nil
      %td.text-center{class: f_css}
        - if can? :edit, f
          = link_to edit_user_forecast_path(user, f, match_id: match), class: 'btn btn-default btn-xs' do
            %span.glyphicon.glyphicon-cog{ title: t('forecasts.edit') }

        .total
          - if (@round.deadline < DateTime.now) || (f.user == current_user)
            - if (match.team1 == f.winner) || (f.team1goal > f.team2goal)
              #{f.team1goal}
              - if f.ending != 'basic'
                %span.tip
                  - if f.ending == 'penalty'
                    %span.ending= t("matches.#{(@round.type_id == 2) ? 'bullit' : match.ending}_short")
                    .tip-text= t("matches.#{(@round.type_id == 2) ? 'bullit' : match.ending}")
                  - elsif f.ending == 'overtime'
                    %span.ending= t("matches.overtime_short#{(@round.type_id == 2) ? '_hockey' : nil}")
                    .tip-text= t("matches.overtime#{(@round.type_id == 2) ? '_hockey' : nil}")
              \ : #{f.team2goal}
            - else (match.team2 == f.winner) || (f.team1goal < f.team2goal)
              #{f.team1goal} : #{f.team2goal}
              - if f.ending != 'basic'
                %span.tip
                  - if f.ending == 'penalty'
                    %span.ending= t("matches.#{(@round.type_id == 2) ? 'bullit' : match.ending}_short")
                    .tip-text= t("matches.#{(@round.type_id == 2) ? 'bullit' : match.ending}")
                  - elsif f.ending == 'overtime'
                    %span.ending= t("matches.overtime_short#{(@round.type_id == 2) ? '_hockey' : nil}")
                    .tip-text= t("matches.overtime#{(@round.type_id == 2) ? '_hockey' : nil}")
          - else
            - unless @round.empty_match && match.desc?
              X : X
    - else
      %td.text-center
        - if (user_signed_in? && ((@round.deadline > DateTime.now)) || (current_user.role? :admin))
          - if can? :new, user => Forecast
            = link_to new_user_forecast_path(user, match_id: match), class: 'btn btn-primary btn-xs' do
              %span.glyphicon.glyphicon-plus{ title: t('forecasts.add') }
  - if @round.check_finish?
    %td.middle
      - f = Forecast.where(match_id: match)
      - unless f.empty?
        %div.tip
          %b #{(f.sum(:team1goal)/f.count.to_f).round} : #{(f.sum(:team2goal)/f.count.to_f).round}
          .tip-text #{(f.sum(:team1goal)/f.count.to_f).round(1)} : #{(f.sum(:team2goal)/f.count.to_f).round(1)}
  - else
    %td
      - results = (Match.where(team1_id: [match.team1, match.team2], team2_id: [match.team1, match.team2]).joins(:round).where(rounds: {type_id: @round.type_id}).pluck(:id) - [match.id]).count
      - if results > 0
        = link_to get_results_round_match_path(@round, match), data: {target: "#dialog_match_#{match.id}", toggle: 'modal'}, class: 'modal-link btn btn-success btn-xs', remote: true do
          %span.glyphicon.glyphicon-info-sign
        .modal.fade(tabIndex='-1' role='dialog' id="dialog_match_#{match.id}")

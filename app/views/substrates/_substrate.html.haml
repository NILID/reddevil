- index = substrate_counter + 1

- css_class = substrate.category == 'mirror' ? substrate.state : substrate.state_css
= content_tag_for(:tr, substrate, class: css_class) do
  %td(style="position:relative")
    = index
    - if can? :edit, Substrate
      .handle-box
        .handle= fa_icon 'arrows inverse'
  %td.substrate-title
    = link_to substrate.title, substrate
    %span.substrates-actions
      - if can? :edit, Substrate
        = link_to edit_substrate_path(substrate), class: 'btn-sm btn btn-secondary' do
          = fa_icon 'edit'
  %td= substrate.drawing
  %td= substrate.number
  %td.substrate-state
    - if can? :edit, Substrate
      - if substrate.category == 'mirror'
        - states = Substrate::MIRROR_STATES.collect {|state| [ state, t("mirrors.states.#{state}")]}.insert(0, ['', '...'])
      - else
        - states = Substrate::STATES.collect {|state| [ state, t("substrates.states.#{state}")]}.insert(0, ['', '...'])
      = best_in_place substrate, :state, as: :select, collection: states, inner_class: 'substrate-select', data: {place_success: substrate.id}, class: 'remote-link', place_holder: '...'
    - else
      = t "#{substrate.category}s.states.#{substrate.state}"
  %td= substrate.theme
  - if params[:action] == 'mirrors'
    %td
      = link_to get_form_substrate_path(substrate), data: {target: "#dialog_#{substrate.id}_child", toggle: 'modal'}, class: 'modal-link', remote: true do
        %span.child-title= substrate.child_title
      .modal.hide.fade(tabIndex='-1' role='dialog' aria-hidden='false' id="dialog_#{substrate.id}_child")

  %td= substrate.desc
  %td
    .substrate_user= link_to substrate.user.profile.surname, user_profile_path(substrate.user) if substrate.user
    %small.substrate_date= l substrate.updated_at, format: :short
